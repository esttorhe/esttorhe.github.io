{"version":3,"sources":["webpack:///component---src-templates-categories-js-2c90f8a3471f4b1d479f.js","webpack:///./src/templates/categories.js"],"names":["webpackJsonp","266","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","pageQuery","undefined","_react","_react2","_propTypes","_propTypes2","_gatsbyLink","_gatsbyLink2","Categories","_ref","pathContext","data","category","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","categoryHeader","createElement","map","_ref2","node","title","frontmatter","url","key","to","style","textDecoration","propTypes","PropTypes","shape","string","isRequired","number","arrayOf"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAiBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAfvFH,EAAQI,YAAa,EACrBJ,EAAQM,UAAYC,MCRrB,IAAAC,GAAAP,EAAA,GDYKQ,EAAUP,EAAuBM,GCXtCE,EAAAT,EAAA,GDeKU,EAAcT,EAAuBQ,GCZ1CE,EAAAX,EAAA,IDgBKY,EAAeX,EAAuBU,GCdrCE,EAAa,SAAAC,GAA2B,GAAxBC,GAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KACzBC,EAAaF,EAAbE,SADoCC,EAEdF,EAAKG,kBAA3BC,EAFoCF,EAEpCE,MAAOC,EAF6BH,EAE7BG,WACTC,EAAoBD,EAApB,SACW,IAAfA,EAAmB,GAAK,KADpB,oBAEcJ,EAFd,GAIN,OACET,GAAAJ,QAAAmB,cAAA,WACEf,EAAAJ,QAAAmB,cAAA,UAAKD,GACLd,EAAAJ,QAAAmB,cAAA,UACGH,EAAMI,IAAI,SAAAC,GAAc,GAAXC,GAAWD,EAAXC,KACJC,EAAUD,EAAKE,YAAfD,MACAE,EAAQH,EAAKG,IAAbA,GACR,OACErB,GAAAJ,QAAAmB,cAAA,MAAIO,IAAKD,GACPrB,EAAAJ,QAAAmB,cAACX,EAAAR,SAAK2B,GAAIF,EAAKG,OAASC,eAAgB,SAAYN,OAK5DnB,EAAAJ,QAAAmB,cAACX,EAAAR,SAAK2B,GAAG,eAAT,mBAKNlB,GAAWqB,WACTnB,YAAaoB,UAAUC,OACrBnB,SAAUkB,UAAUE,OAAOC,aAE7BtB,KAAMmB,UAAUC,OACdjB,kBAAmBgB,UAAUC,OAC3Bf,WAAYc,UAAUI,OAAOD,WAC7BlB,MAAOe,UAAUK,QACfL,UAAUC,OACRV,KAAMS,UAAUC,OACdR,YAAaO,UAAUC,OACrBT,MAAOQ,UAAUE,OAAOC,aAE1BT,IAAKM,UAAUE,OAAOC,eAEvBA,iBD4CVvC,EAAQK,QCtCMS,CAEFR","file":"component---src-templates-categories-js-2c90f8a3471f4b1d479f.js","sourcesContent":["webpackJsonp([26379419371658],{\n\n/***/ 266:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(7);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _gatsbyLink = __webpack_require__(12);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Categories = function Categories(_ref) {\n\t  var pathContext = _ref.pathContext,\n\t      data = _ref.data;\n\t  var category = pathContext.category;\n\t  var _data$allMarkdownRema = data.allMarkdownRemark,\n\t      edges = _data$allMarkdownRema.edges,\n\t      totalCount = _data$allMarkdownRema.totalCount;\n\t\n\t  var categoryHeader = totalCount + \" post\" + (totalCount === 1 ? \"\" : \"s\") + \" categorized as \\xAB\" + category + \"\\xBB\";\n\t\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"h1\",\n\t      null,\n\t      categoryHeader\n\t    ),\n\t    _react2.default.createElement(\n\t      \"ul\",\n\t      null,\n\t      edges.map(function (_ref2) {\n\t        var node = _ref2.node;\n\t        var title = node.frontmatter.title;\n\t        var url = node.url.url;\n\t\n\t        return _react2.default.createElement(\n\t          \"li\",\n\t          { key: url },\n\t          _react2.default.createElement(\n\t            _gatsbyLink2.default,\n\t            { to: url, style: { textDecoration: 'none' } },\n\t            title\n\t          )\n\t        );\n\t      })\n\t    ),\n\t    _react2.default.createElement(\n\t      _gatsbyLink2.default,\n\t      { to: \"/categories\" },\n\t      \"All categories\"\n\t    )\n\t  );\n\t};\n\t\n\t// Components\n\t\n\t\n\tCategories.propTypes = {\n\t  pathContext: _propTypes2.default.shape({\n\t    category: _propTypes2.default.string.isRequired\n\t  }),\n\t  data: _propTypes2.default.shape({\n\t    allMarkdownRemark: _propTypes2.default.shape({\n\t      totalCount: _propTypes2.default.number.isRequired,\n\t      edges: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n\t        node: _propTypes2.default.shape({\n\t          frontmatter: _propTypes2.default.shape({\n\t            title: _propTypes2.default.string.isRequired\n\t          }),\n\t          url: _propTypes2.default.string.isRequired\n\t        })\n\t      }).isRequired)\n\t    })\n\t  })\n\t};\n\t\n\texports.default = Categories;\n\tvar pageQuery = exports.pageQuery = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-categories-js-2c90f8a3471f4b1d479f.js","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport Link from \"gatsby-link\";\n\nconst Categories = ({ pathContext, data }) => {\n  const { category } = pathContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const categoryHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } categorized as «${category}»`;\n\n  return (\n    <div>\n      <h1>{categoryHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { title } = node.frontmatter;\n          const { url } = node.url;\n          return (\n            <li key={url}>\n              <Link to={url} style={{ textDecoration: 'none', }}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Link to=\"/categories\">All categories</Link>\n    </div>\n  );\n};\n\nCategories.propTypes = {\n  pathContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            url: PropTypes.string.isRequired,\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Categories;\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { \n        frontmatter: { categories: { in: [$category] } } \n        fields: { group: { eq: \"posts\" } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          url\n        }\n      }\n    }\n  }\n`;\n\n\n// WEBPACK FOOTER //\n// ./src/templates/categories.js"],"sourceRoot":""}