{"version":3,"sources":["webpack:///path---disabling-animations-heuristics-92663b78147d5c384911.js","webpack:///./.cache/json/disabling-animations-heuristics.json"],"names":["webpackJsonp","541","module","exports","data","site","siteMetadata","githubRepo","author","markdownRemark","frontmatter","title","issueNumber","categories","tags","date","html","url","pathContext","id"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,WAAA,iDAAAC,OAAA,mBAAyFC,gBAAmBC,aAAeC,MAAA,kCAAAC,YAAA,GAAAC,YAAA,4BAAAC,MAAA,2BAAAN,OAAA,KAAAO,KAAA,4BAAwLC,KAAA,ypFAAm3EC,IAAA,oCAA4YC,aAAgBC,GAAA","file":"path---disabling-animations-heuristics-92663b78147d5c384911.js","sourcesContent":["webpackJsonp([237812793438700],{\n\n/***/ 541:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"githubRepo\":\"https://github.com/esttorhe/esttorhe.github.io\",\"author\":\"Esteban Torres\"}},\"markdownRemark\":{\"frontmatter\":{\"title\":\"Disabling Animations Heuristics\",\"issueNumber\":30,\"categories\":[\"strategies\",\"performance\"],\"tags\":[\"animations\",\"heuristics\"],\"author\":null,\"date\":\"2017-09-25T13:19:44.000Z\"},\"html\":\"<p>Checking <code class=\\\"language-text\\\">Twitter</code> the other day I stumble this tweets from <a href=\\\"https://twitter.com/zats\\\">Sash Zats</a> addressing some heuristics for enabling/disabling intensive animations in <code class=\\\"language-text\\\">iOS</code> apps:</p>\\n<hr>\\n<script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[1/4]** When performing intensive animations or other auxiliary work consider creating a helper checking following (in no particular order):</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125012157214721\\\">September 19, 2017</a></blockquote>\\n<!--more-->\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[2/4]**<br/>• NSProcessInfo thermalState - is device already working hard<br/>• NSProcessInfo isLowPowerModeEnabled - is user trying to safe battery</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125072764960773\\\">September 19, 2017</a></blockquote>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[3/4]**<br/>• UIAccessibilityIsReduceMotionEnabled - is user sensitive to motion</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125128385650694\\\">September 19, 2017</a></blockquote>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[4/4]**<br/>• UIDevice batteryState &amp; batteryLevel - to know when device is not charging and low on battery<br/>Any other heuristics that I&#39;m missing?</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125225622224896\\\">September 19, 2017</a></blockquote>\\n<hr>\\n<p>That definitely resonated in me and made me realised with horror that I have never «bothered» to even consider any of this things before performing intensive blocks of animation.</p>\\n<p>Below on the thread <a href=\\\"https://twitter.com/icanzilb\\\">Marin Todorov</a> provided a link to this checks added to <code class=\\\"language-text\\\">RxAnimated</code> (Here's the link to the specific line of code: <a href=\\\"https://github.com/RxSwiftCommunity/RxAnimated/blob/master/RxAnimated/Core/RxAnimated.swift#L95\\\">shouldDisableAnimationsViaDefaultHeuristics</a>).</p>\\n<p>{% github RxSwiftCommunity RxAnimated ac3e33b5aa5334f13d930a52c3fc3f341b66e13f %}</p>\\n<hr>\\n<p>From now on this is something that I'll definitely be doing on my apps and would probably keep updating it as more I find more heuristics to be applied to this check.\\n<em>Edit: There isn't much to this blog post other than drawing attention to the heuristics and hopefully raising awareness so more developers start to use them.</em></p>\",\"url\":\"Disabling-Animations-Heuristics\"}},\"pathContext\":{\"id\":\"/home/travis/build/esttorhe/esttorhe.github.io/content/_posts/2017-09-25-Disabling-Animations-Heuristics.md absPath of file >>> MarkdownRemark\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---disabling-animations-heuristics-92663b78147d5c384911.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"githubRepo\":\"https://github.com/esttorhe/esttorhe.github.io\",\"author\":\"Esteban Torres\"}},\"markdownRemark\":{\"frontmatter\":{\"title\":\"Disabling Animations Heuristics\",\"issueNumber\":30,\"categories\":[\"strategies\",\"performance\"],\"tags\":[\"animations\",\"heuristics\"],\"author\":null,\"date\":\"2017-09-25T13:19:44.000Z\"},\"html\":\"<p>Checking <code class=\\\"language-text\\\">Twitter</code> the other day I stumble this tweets from <a href=\\\"https://twitter.com/zats\\\">Sash Zats</a> addressing some heuristics for enabling/disabling intensive animations in <code class=\\\"language-text\\\">iOS</code> apps:</p>\\n<hr>\\n<script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[1/4]** When performing intensive animations or other auxiliary work consider creating a helper checking following (in no particular order):</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125012157214721\\\">September 19, 2017</a></blockquote>\\n<!--more-->\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[2/4]**<br/>• NSProcessInfo thermalState - is device already working hard<br/>• NSProcessInfo isLowPowerModeEnabled - is user trying to safe battery</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125072764960773\\\">September 19, 2017</a></blockquote>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[3/4]**<br/>• UIAccessibilityIsReduceMotionEnabled - is user sensitive to motion</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125128385650694\\\">September 19, 2017</a></blockquote>\\n<blockquote class=\\\"twitter-tweet\\\" data-lang=\\\"en\\\"><p lang=\\\"en\\\" dir=\\\"ltr\\\">**[4/4]**<br/>• UIDevice batteryState &amp; batteryLevel - to know when device is not charging and low on battery<br/>Any other heuristics that I&#39;m missing?</p>&mdash; Sash Zats (@zats) <a href=\\\"https://twitter.com/zats/status/910125225622224896\\\">September 19, 2017</a></blockquote>\\n<hr>\\n<p>That definitely resonated in me and made me realised with horror that I have never «bothered» to even consider any of this things before performing intensive blocks of animation.</p>\\n<p>Below on the thread <a href=\\\"https://twitter.com/icanzilb\\\">Marin Todorov</a> provided a link to this checks added to <code class=\\\"language-text\\\">RxAnimated</code> (Here's the link to the specific line of code: <a href=\\\"https://github.com/RxSwiftCommunity/RxAnimated/blob/master/RxAnimated/Core/RxAnimated.swift#L95\\\">shouldDisableAnimationsViaDefaultHeuristics</a>).</p>\\n<p>{% github RxSwiftCommunity RxAnimated ac3e33b5aa5334f13d930a52c3fc3f341b66e13f %}</p>\\n<hr>\\n<p>From now on this is something that I'll definitely be doing on my apps and would probably keep updating it as more I find more heuristics to be applied to this check.\\n<em>Edit: There isn't much to this blog post other than drawing attention to the heuristics and hopefully raising awareness so more developers start to use them.</em></p>\",\"url\":\"Disabling-Animations-Heuristics\"}},\"pathContext\":{\"id\":\"/home/travis/build/esttorhe/esttorhe.github.io/content/_posts/2017-09-25-Disabling-Animations-Heuristics.md absPath of file >>> MarkdownRemark\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/disabling-animations-heuristics.json\n// module id = 541\n// module chunks = 237812793438700"],"sourceRoot":""}